@using AutoRest.Core
@using AutoRest.Core.Model
@using AutoRest.CSharp.Model
@inherits Template<global::AutoRest.CSharp.Model.CompositeTypeCs>
@Header("// ")
@EmptyLine
namespace @(Settings.Namespace).@(Settings.ModelsName)
{
	using System;
	using System.Collections.Generic;
@EmptyLine
	public partial class @Model.Name@(Model.BaseModelType != null ? " : " + Model.BaseModelType.Name : "")
	{
	@EmptyLine

	@EmptyLine
	@foreach (PropertyCs property in Model.InstanceProperties)
	{
		switch (property.Flavor)
		{
			case PropertyFlavor.ForwardTo:
				@:public @property.ModelTypeName @property.Name
				@:{
				@:    get { return this.@(property.ForwardTo.Name); }
				@:    set { this.@(property.ForwardTo.Name) = value; }
				@:}
				break;
			case PropertyFlavor.Implementation:
				var impl = property.GetImplementation("csharp");
				if (impl == null)
				{
					@:public @property.ModelTypeName @property.Name { get; @(property.IsReadOnly ? "private " : "")set; }
				}
				else
				{
					@:public @property.ModelTypeName @property.Name
					@:{
					@:@impl
					@:}
				}
				break;
			case PropertyFlavor.AdditionalProperties:
			case PropertyFlavor.Regular:
				@:public @property.ModelTypeName @property.Name { get; @(property.IsReadOnly ? "private " : "")set; }
				break;
			default:
				throw new System.NotImplementedException();
		}
		@EmptyLine
	}
	}
}